version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: ecommerce_db
    environment:
      POSTGRES_DB: ecommerce_db
      POSTGRES_USER: ecommerce_user
      POSTGRES_PASSWORD: ecommerce_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - ecommerce_network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce_app
    environment:
      DATABASE_URL: "postgresql://ecommerce_user:ecommerce_password@db:5432/ecommerce_db"
      NEXT_PUBLIC_SNIPCART_API_KEY: "${NEXT_PUBLIC_SNIPCART_API_KEY}"
      SNIPCART_SECRET_KEY: "${SNIPCART_SECRET_KEY}"
      JWT_SECRET: "${JWT_SECRET}"
      ADMIN_EMAIL: "${ADMIN_EMAIL}"
      ADMIN_PASSWORD: "${ADMIN_PASSWORD}"
      NEXT_PUBLIC_SITE_URL: "${NEXT_PUBLIC_SITE_URL:-http://localhost:3000}"
    ports:
      - "3000:3000"
    depends_on:
      - db
    networks:
      - ecommerce_network
    volumes:
      - ./uploads:/app/public/uploads

  # Redis for session storage (optional)
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis
    ports:
      - "6379:6379"
    networks:
      - ecommerce_network

volumes:
  postgres_data:

networks:
  ecommerce_network:
    driver: bridge
